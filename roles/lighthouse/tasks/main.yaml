- name: Create lighthouse group
  ansible.builtin.group:
    name: lighthouse
    state: present
  become: true

- name: Create lighthouse user
  ansible.builtin.user:
    name: lighthouse
    groups: lighthouse
    shell: /usr/sbin/nologin
  become: true

- name: Restrict lighthouse home directory permissions
  ansible.builtin.file:
    path: /home/lighthouse
    state: directory
    owner: lighthouse
    group: lighthouse
    mode: '0750'
  become: true

- name: Create downloads directory
  ansible.builtin.file:
    path: /home/lighthouse/downloads
    state: directory
    owner: lighthouse
    group: lighthouse
    mode: '0750'
  become: true

- name: Download lighthouse
  ansible.builtin.get_url:
    url: "https://github.com/sigp/lighthouse/releases/download/{{ lighthouse.version }}/lighthouse-{{ lighthouse.version }}-x86_64-unknown-linux-gnu.tar.gz"
    dest: /home/lighthouse/downloads/lighthouse-{{ lighthouse.version }}.tgz
    checksum: "{{ lighthouse.checksum }}"
    owner: lighthouse
    group: lighthouse
    mode: '0644'
  register: lighthouse_download
  become: true

- name: Extract lighthouse binary
  ansible.builtin.unarchive:
    src: /home/lighthouse/downloads/lighthouse-{{ lighthouse.version }}.tgz
    dest: /usr/local/bin
    remote_src: true
  when: lighthouse_download.changed
  become: true
  notify:
    - Restart beacon
    - Restart validator

- name: Ensure correct binary permissions
  ansible.builtin.file:
    path: /usr/local/bin/lighthouse
    state: file
    owner: root
    group: root
    mode: '0755'
  become: true

- name: Set data directory permissions
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: lighthouse
    group: lighthouse
    mode: '0750'
  become: true
  loop:
    - "{{ configuration.lighthouse.datadir_base }}"
    - "{{ configuration.lighthouse.datadir_base }}/{{ configuration.lighthouse.network }}"

- name: Set slasher_db data directory permissions
  ansible.builtin.file:
    path: "{{ configuration.lighthouse.slasher.datadir }}"
    state: directory
    owner: lighthouse
    group: lighthouse
    mode: '0750'
  become: true
  when: configuration.lighthouse.slasher.datadir

- name: Configure beacon systemd unit
  ansible.builtin.template:
    src: beacon.service.j2
    dest: /etc/systemd/system/beacon.service
    owner: root
    group: root
    mode: '0664'
  become: true
  when: "'beacon' in group_names"
  notify: Restart beacon

- name: Enable beacon service
  ansible.builtin.systemd:
    name: beacon
    state: started
    enabled: true
  when: "'beacon' in group_names"
  become: true

- name: Create AuthRPC JWT
  ansible.builtin.copy:
    dest: "{{ configuration.lighthouse.beacon.execution_endpoint.jwtpath }}"
    owner: lighthouse
    group: lighthouse
    mode: "0400"
    content: "{{ authjwt }}"
- name: Configure validator systemd unit
  ansible.builtin.template:
    src: validator.service.j2
    dest: /etc/systemd/system/validator.service
    owner: root
    group: root
    mode: '0664'
  become: true
  when: "'validator' in group_names"
  notify: Restart validator

- name: Enable validator service
  ansible.builtin.systemd:
    name: validator
    state: started
    enabled: true
  when: "'validator' in group_names"
  become: true
